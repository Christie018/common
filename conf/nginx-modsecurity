#!/bin/bash -e

# This script generates the require libmodsecurity module
# for Nginx - assumes that Nginx is already installed via apt

# only need CODENAME, but gather RELEASE if set
RELEASE=${RELEASE:-debian/$(lsb_release -sc)}
CODENAME=$(basename $RELEASE)

# as the name suggests, BUILD_DEPS are needed during the build and will be
# removed later
DEPS="libmodsecurity3"
BUILD_DEPS="build-essential libmodsecurity-dev libpcre3-dev libxslt1-dev \
            libgd-dev libgeoip-dev"

# create and enter dev directory
DEV_DIR=/tmp/nginx-dev
mkdir -p $DEV_DIR
cd $DEV_DIR

# enable src repo, install deps and download nginx source
cat > /etc/apt/sources.list.d/src.sources.list <<EOF
# Debian source package repos
deb-src http://deb.debian.org/debian $CODENAME main
EOF
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y $DEPS $BUILD_DEPS
DEBIAN_FRONTEND=noninteractive apt-get source nginx

# collect default Debian build options and tweak as required
OPTS=$(/usr/sbin/nginx -V 2>&1 | \
    sed -n "s|--|\n--|g; s|^configure arguments: \n||p;")
CC_OPTS=$(echo "$OPTS" | sed -n "\|^--with-cc-opt| s|^.*='\(.*\)'|\1|"p)
LD_OPTS=$(echo "$OPTS" | sed -n "\|^--with-ld-opt| s|^.*='\(.*\)'|\1|"p)

OPTS=$(echo "$OPTS" | grep -v -- ^--with-cc-opt)
OPTS=$(echo "$OPTS" | grep -v -- ^--with-ld-opt)
# remove default modules see
# https://github.com/SpiderLabs/ModSecurity-nginx/issues/159 and
# https://github.com/SpiderLabs/ModSecurity-nginx/issues/117
OPTS=$(echo "$OPTS" | grep -v -- ^--add-dynamic-module)

# clone req'd repo and compile, setup and enable nginx modsecurity
git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git
cd nginx-1.*
./configure --with-cc-opt="$CC_OPTS" --with-ld-opt="$LD_OPTS" $OPTS \
    --add-dynamic-module=../ModSecurity-nginx
make modules
mkdir -p /etc/nginx/{modules,modsec}
cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules/
echo "load_module /etc/nginx/modules/ngx_http_modsecurity_module.so;" \
    > /etc/nginx/modules-available/modsecurity.conf
ln -sf /etc/nginx/modules-available/modsecurity.conf /etc/nginx/modules-enabled/
curl -o /etc/nginx/modsec/modsecurity.conf \
    https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended
curl -o /etc/nginx/modsec/unicode.mapping \
    https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/unicode.mapping
cat > /etc/nginx/modsec/main.conf <<EOF
Include "/etc/nginx/modsec/modsecurity.conf"
SecRule ARGS:testparam "@contains test" "id:1234,deny,status:403"
EOF
cat > /etc/nginx/include/modsecurity.conf <<EOF
modsecurity on;
modsecurity_rules_file /etc/nginx/modsec/main.conf;
EOF

# add modsecurity to default nginx.conf
if ! grep -q modsecurity.conf /etc/nginx/nginx.conf; then
    match_line="include /etc/nginx/sites-enabled/\*;"
    new_line="include /etc/nginx/include/modsecurity.conf;"
    sed -i "\|${match_line}| s|^\(\s*\).*|\1${match_line}\n\1${new_line}|" \
        /etc/nginx/nginx.conf
fi

# cleanup
rm -f /etc/apt/sources.list.d/src.sources.list
rm -rf $DEV_DIR
DEBIAN_FRONTEND=noninteractive apt-get purge -y $BUILD_DEPS
DEBIAN_FRONTEND=noninteractive apt-get autoremove -y
